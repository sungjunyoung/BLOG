{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["Date","styled","p","styledScale","rhythm","Divider","hr","PostNavigator","ul","BlogPost","props","data","post","markdownRemark","excerpt","frontmatter","html","siteTitle","site","siteMetadata","title","pageContext","previous","next","commentsRef","useRef","useEffect","script","document","createElement","src","crossOrigin","async","setAttribute","current","appendChild","location","description","date","dangerouslySetInnerHTML","__html","className","ref","to","fields","slug","rel","pageQuery"],"mappings":"2FACA,kJAeMA,EAAOC,IAAOC,EAAV,sEAAGD,CAAH,wDAENE,aAAY,IACGC,YAAO,GACVA,aAAQ,IAGlBC,EAAUJ,IAAOK,GAAV,yEAAGL,CAAH,uBACMG,YAAO,IAGpBG,EAAgBN,IAAOO,GAAV,+EAAGP,CAAH,wGAKHG,YAAO,IAyDRK,UArDE,SAACC,GAChB,IAAMC,EAAOD,EAAMC,KACbC,EAAOD,EAAKE,eACZC,EAAUF,EAAKE,QACfC,EAAcH,EAAKG,YACnBC,EAAOJ,EAAKI,KACZC,EAAYN,EAAKO,KAAMC,aAAcC,MANV,EAONV,EAAMW,YAAzBC,EAPyB,EAOzBA,SAAUC,EAPe,EAOfA,KACZC,EAAcC,iBAAuB,MAa3C,OAXAC,qBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,gCACbH,EAAOI,YAAc,aACrBJ,EAAOK,OAAQ,EACfL,EAAOM,aAAa,aAAcrB,EAAKG,YAAaK,OACpDO,EAAOM,aAAa,OAAQ,8BAC5BN,EAAOM,aAAa,YAAa,gBACjCT,EAAYU,QAASC,YAAYR,KAChC,IAGD,kBAAC,IAAD,CAAQS,SAAU1B,EAAM0B,SAAUhB,MAAOH,GACvC,kBAAC,IAAD,CACEG,MAAOL,EAAYK,MACnBiB,YAAatB,EAAYsB,aAAevB,IAE1C,4BAAKF,EAAKG,YAAaK,OACvB,kBAACpB,EAAD,KAAOe,EAAYuB,MACnB,yBAAKC,wBAAyB,CAAEC,OAAQxB,KACxC,kBAACX,EAAD,MACA,kBAAC,IAAD,MACA,yBAAKoC,UAAU,mBAAmBC,IAAKlB,IACvC,kBAACjB,EAAD,KACE,4BACGe,GACC,kBAAC,IAAD,CAAUqB,GAAIrB,EAASsB,OAAQC,KAAOC,IAAI,QAA1C,KACKxB,EAASP,YAAaK,QAI/B,4BACGG,GACC,kBAAC,IAAD,CAAUoB,GAAIpB,EAAKqB,OAAQC,KAAOC,IAAI,QACnCvB,EAAKR,YAAaK,MADrB,UAYL,IAAM2B,EAAY","file":"component---src-templates-blog-post-tsx-6c60b781032f8b929817.js","sourcesContent":["import { graphql, PageRendererProps } from \"gatsby\"\nimport React, { useEffect, useRef } from \"react\"\nimport styled from \"styled-components\"\n\nimport { Bio } from \"../components/bio\"\nimport { Layout } from \"../components/layout\"\nimport { BlogLink } from \"../components/blog-link\"\nimport { SEO } from \"../components/seo\"\nimport { Query, SitePageContext } from \"../graphql-types\"\nimport { rhythm, styledScale } from \"../utils/typography\"\n\ninterface Props extends PageRendererProps {\n  pageContext: SitePageContext\n  data: Query\n}\n\nconst Date = styled.p`\n  display: block;\n  ${styledScale(-1 / 5)};\n  margin-bottom: ${rhythm(1)};\n  margin-top: ${rhythm(-1)};\n`\n\nconst Divider = styled.hr`\n  margin-bottom: ${rhythm(1)};\n`\n\nconst PostNavigator = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  margin-top: ${rhythm(1)};\n  padding: 0;\n`\n\nconst BlogPost = (props: Props) => {\n  const data = props.data!\n  const post = data.markdownRemark!\n  const excerpt = post.excerpt!\n  const frontmatter = post.frontmatter!\n  const html = post.html!\n  const siteTitle = data.site!.siteMetadata!.title!\n  const { previous, next } = props.pageContext\n  const commentsRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const script = document.createElement(\"script\")\n    script.src = \"https://utteranc.es/client.js\"\n    script.crossOrigin = \"anonymouse\"\n    script.async = true\n    script.setAttribute(\"issue-term\", post.frontmatter!.title as string)\n    script.setAttribute(\"repo\", \"sungjunyoung/blog-comments\")\n    script.setAttribute(\"rethemepo\", \"github-light\")\n    commentsRef.current!.appendChild(script)\n  }, [])\n\n  return (\n    <Layout location={props.location} title={siteTitle}>\n      <SEO\n        title={frontmatter.title!}\n        description={frontmatter.description || excerpt}\n      />\n      <h1>{post.frontmatter!.title}</h1>\n      <Date>{frontmatter.date}</Date>\n      <div dangerouslySetInnerHTML={{ __html: html }} />\n      <Divider />\n      <Bio />\n      <div className=\"comments-wrapper\" ref={commentsRef}></div>\n      <PostNavigator>\n        <li>\n          {previous && (\n            <BlogLink to={previous.fields!.slug!} rel=\"prev\">\n              ← {previous.frontmatter!.title}\n            </BlogLink>\n          )}\n        </li>\n        <li>\n          {next && (\n            <BlogLink to={next.fields!.slug!} rel=\"next\">\n              {next.frontmatter!.title} →\n            </BlogLink>\n          )}\n        </li>\n      </PostNavigator>\n    </Layout>\n  )\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}